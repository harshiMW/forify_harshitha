{"ast":null,"code":"var _jsxFileName = \"/Users/dishanth/Documents/GitHub/FnR-FE/src/Pages/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../Search/AuthContext';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [error, setError] = useState('');\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleGoogleLoginSuccess = async credentialResponse => {\n    console.log('Google login successful:', credentialResponse);\n    const decoded = jwtDecode(credentialResponse.credential);\n    console.log('Decoded JWT Token:', decoded);\n    const userEmail = decoded.email;\n    console.log('User Email:', userEmail);\n    if (!userEmail.endsWith('@meltwater.com')) {\n      setError('Meltwater Internal Users only!!!');\n      return;\n    }\n    let userName = decoded.name || 'N/A';\n    if (userName === 'N/A') {\n      try {\n        const userInfoResponse = await axios.get('https://www.googleapis.com/oauth2/v3/userinfo', {\n          headers: {\n            Authorization: `Bearer ${credentialResponse.credential}`\n          }\n        });\n        userName = userInfoResponse.data.name || userName;\n      } catch (error) {\n        console.error('Error fetching user info:', error);\n      }\n    }\n    console.log('User Name:', userName);\n    sendToBackend(userEmail, userName); // Pass decoded email and username to sendToBackend function\n    sessionStorage.setItem('token', credentialResponse.credential);\n    login();\n    navigate('/Home');\n  };\n  const handleGoogleLoginFailure = error => {\n    console.error('Google login failed:', error);\n    setError('Google login failed. Please try again.');\n  };\n  function sendToBackend(userEmail, userName) {\n    console.log(userEmail);\n    console.log(userName);\n    const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5001';\n    axios.post(`${backendUrl}/logindetails`, {\n      Mail: userEmail,\n      Username: userName\n    }).then(() => console.log(\"Mail and username sent to backend\")).catch(error => console.error(\"Error sending mail and username to backend:\", error));\n  }\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"159287183082-apaliug4f44oiolj0ejt4f5bmu9tcr6r.apps.googleusercontent.com\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.content,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.heading,\n          children: \"GOOGLE LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.error,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleGoogleLoginSuccess,\n          onError: handleGoogleLoginFailure,\n          style: styles.googleButton // Centering the Google SSO login button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"wbaB7bJkuP4ylRNoeUG8tGI82vY=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '100vh',\n    padding: '0 20px',\n    overflow: 'hidden' // Prevent scrolling\n  },\n  content: {\n    textAlign: 'center'\n  },\n  heading: {\n    marginBottom: '5px' // Adjusting margin bottom of heading\n  },\n  error: {\n    color: 'red',\n    marginBottom: '5px' // Adding margin bottom to error message\n  },\n  googleButton: {\n    marginTop: '0px' // Reduced margin top to move the button up\n  }\n};\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","GoogleOAuthProvider","GoogleLogin","jwtDecode","axios","jsxDEV","_jsxDEV","Login","_s","error","setError","login","navigate","handleGoogleLoginSuccess","credentialResponse","console","log","decoded","credential","userEmail","email","endsWith","userName","name","userInfoResponse","get","headers","Authorization","data","sendToBackend","sessionStorage","setItem","handleGoogleLoginFailure","backendUrl","process","env","REACT_APP_BACKEND_URL","post","Mail","Username","then","catch","clientId","children","style","styles","container","content","heading","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","googleButton","_c","display","flexDirection","alignItems","justifyContent","minHeight","padding","overflow","textAlign","marginBottom","color","marginTop","$RefreshReg$"],"sources":["/Users/dishanth/Documents/GitHub/FnR-FE/src/Pages/Login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../Search/AuthContext';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport {jwtDecode} from 'jwt-decode';\nimport axios from 'axios';\n\nconst Login = () => {\n  const [error, setError] = useState('');\n  const { login } = useAuth();\n  const navigate = useNavigate();\n\n  const handleGoogleLoginSuccess = async (credentialResponse) => {\n    console.log('Google login successful:', credentialResponse);\n    const decoded = jwtDecode(credentialResponse.credential); \n    console.log('Decoded JWT Token:', decoded);\n\n    const userEmail = decoded.email;\n    console.log('User Email:', userEmail);\n\n    if (!userEmail.endsWith('@meltwater.com')) {\n      setError('Meltwater Internal Users only!!!');\n      return;\n    }\n\n    let userName = decoded.name || 'N/A';\n\n    if (userName === 'N/A') {\n      try {\n        const userInfoResponse = await axios.get('https://www.googleapis.com/oauth2/v3/userinfo', {\n          headers: {\n            Authorization: `Bearer ${credentialResponse.credential}`,\n          },\n        });\n        userName = userInfoResponse.data.name || userName;\n      } catch (error) {\n        console.error('Error fetching user info:', error);\n      }\n    }\n\n    console.log('User Name:', userName);\n\n    sendToBackend(userEmail, userName); // Pass decoded email and username to sendToBackend function\n    sessionStorage.setItem('token', credentialResponse.credential);\n    login();\n    navigate('/Home');\n  };\n\n  const handleGoogleLoginFailure = (error) => {\n    console.error('Google login failed:', error);\n    setError('Google login failed. Please try again.');\n  };\n\n  function sendToBackend(userEmail, userName) {\n    console.log(userEmail);\n    console.log(userName);\n    const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5001';\n    axios.post(`${backendUrl}/logindetails`, {\n      Mail: userEmail,\n      Username: userName\n    })\n    .then(() => console.log(\"Mail and username sent to backend\"))\n    .catch((error) => console.error(\"Error sending mail and username to backend:\", error));\n  }\n\n  return (\n    <GoogleOAuthProvider clientId=\"159287183082-apaliug4f44oiolj0ejt4f5bmu9tcr6r.apps.googleusercontent.com\">\n      <div style={styles.container}>\n        <div style={styles.content}>\n          <h3 style={styles.heading}>GOOGLE LOGIN</h3>\n          {error && <p style={styles.error}>{error}</p>}\n          <GoogleLogin\n            onSuccess={handleGoogleLoginSuccess}\n            onError={handleGoogleLoginFailure}\n            style={styles.googleButton} // Centering the Google SSO login button\n          />\n        </div>\n      </div>\n    </GoogleOAuthProvider>\n  );\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '100vh',\n    padding: '0 20px',\n    overflow: 'hidden', // Prevent scrolling\n  },\n  content: {\n    textAlign: 'center',\n  },\n  heading: {\n    marginBottom: '5px', // Adjusting margin bottom of heading\n  },\n  error: {\n    color: 'red',\n    marginBottom: '5px', // Adding margin bottom to error message\n  },\n  googleButton: {\n    marginTop: '0px', // Reduced margin top to move the button up\n  },\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}