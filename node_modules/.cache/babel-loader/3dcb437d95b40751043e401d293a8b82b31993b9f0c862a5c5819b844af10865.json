{"ast":null,"code":"var _jsxFileName = \"/Users/Meltwater_User/Documents/GitHub/FnR-FE/src/Pages/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { jwtDecode } from 'jwt-decode'; // Corrected import\n// require('dotenv').config()\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState('');\n  const [userName, setUserName] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isLoggedIn) {\n      const timeoutId = setTimeout(handleSignOut, 30 * 60000);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [isLoggedIn]);\n  const handleLoginSuccess = credentialResponse => {\n    const decoded = jwtDecode(credentialResponse.credential); // Corrected function call\n    const userEmail = decoded.email;\n    console.log('User Email:', userEmail); // Print user's email to console\n    console.log('User Name:', decoded.username); // Print user's username to console\n    setIsLoggedIn(true);\n    setUserEmail(userEmail); // Extracting user's email\n    setUserName(decoded.username);\n    sendtobackend(decoded.email); // Pass decoded email to sendtobackend function\n    sessionStorage.setItem('token', credentialResponse.credential);\n    navigate('/home'); // Redirect to home page after successful login\n  };\n  const handleLoginError = () => {\n    console.log('Login Failed');\n  };\n  const handleSignOut = () => {\n    setIsLoggedIn(false);\n    setUserEmail('');\n    setUserName('');\n    sessionStorage.removeItem('token');\n  };\n  function sendtobackend(userEmail) {\n    console.log(userEmail);\n    const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5001';\n    axios.post(`${backendUrl}/logindetails`, {\n      Mail: userEmail\n    }).then(() => console.log(\"Mail sent to backend\")).catch(error => console.error(\"Error sending mail to backend:\", error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-container\",\n    children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n      clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Welcome, \", userEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSignOut,\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleLoginSuccess,\n        onError: handleLoginError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"J/DGBZ8/jgebZ5hOQWeGf+k+sro=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","GoogleOAuthProvider","GoogleLogin","jwtDecode","jsxDEV","_jsxDEV","Login","_s","isLoggedIn","setIsLoggedIn","userEmail","setUserEmail","userName","setUserName","navigate","timeoutId","setTimeout","handleSignOut","clearTimeout","handleLoginSuccess","credentialResponse","decoded","credential","email","console","log","username","sendtobackend","sessionStorage","setItem","handleLoginError","removeItem","backendUrl","process","env","REACT_APP_BACKEND_URL","post","Mail","then","catch","error","className","children","clientId","REACT_APP_GOOGLE_CLIENT_ID","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSuccess","onError","_c","$RefreshReg$"],"sources":["/Users/Meltwater_User/Documents/GitHub/FnR-FE/src/Pages/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { jwtDecode } from 'jwt-decode'; // Corrected import\n// require('dotenv').config()\n\nfunction Login() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState('');\n  const [userName, setUserName] = useState('');\n  const navigate = useNavigate();\n  \n\n  useEffect(() => {\n    if (isLoggedIn) {\n      const timeoutId = setTimeout(handleSignOut, 30 * 60000);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [isLoggedIn]);\n\n  const handleLoginSuccess = (credentialResponse) => {\n    const decoded = jwtDecode(credentialResponse.credential); // Corrected function call\n    const userEmail = decoded.email;\n    console.log('User Email:', userEmail); // Print user's email to console\n    console.log('User Name:', decoded.username); // Print user's username to console\n    setIsLoggedIn(true);\n    setUserEmail(userEmail); // Extracting user's email\n    setUserName(decoded.username);\n    sendtobackend(decoded.email); // Pass decoded email to sendtobackend function\n    sessionStorage.setItem('token', credentialResponse.credential);\n    navigate('/home'); // Redirect to home page after successful login\n  };\n\n  const handleLoginError = () => {\n    console.log('Login Failed');\n  };\n\n  const handleSignOut = () => {\n    setIsLoggedIn(false);\n    setUserEmail('');\n    setUserName('');\n    sessionStorage.removeItem('token');\n  };\n\n  function sendtobackend(userEmail) {\n    console.log(userEmail)\n    const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5001';\n    axios.post(`${backendUrl}/logindetails`, {\n      Mail: userEmail\n    })\n    \n    .then(() => console.log(\"Mail sent to backend\"))\n    .catch((error) => console.error(\"Error sending mail to backend:\", error));\n  }\n\n  return (\n    <div className=\"center-container\">\n      <GoogleOAuthProvider clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}>\n        {isLoggedIn ? (\n          <div>\n            <p>Welcome, {userEmail}</p> {/* Displaying user's email */}\n            <p>{userName}</p>\n            <button onClick={handleSignOut}>Sign Out</button>\n          </div>\n        ) : (\n          <GoogleLogin\n            onSuccess={handleLoginSuccess}\n            onError={handleLoginError}\n          />\n        )}\n      </GoogleOAuthProvider>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}